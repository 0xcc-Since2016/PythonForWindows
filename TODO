TODO:
    - Documentation
    - ProcessMemory object ? (metasm like)
    - Extend Registry feature (write)

    - remove pe_parse.transform_ctypes_fields (use utils.transform_ctypes_fields)
    - DBG
        - Verif multiple bp at same place..
        - Verif multiple pending at same place
        - Clean / (rethink?) vectored_exception (+rename exception.py? context.py?)
        - Test !! (bp, BP_HX, bp on only on process, bp_hx on only one thread..)

    - Injection with suspended process ?
        - FIX/add test (inject suspended 32 -> 64)

    - Free all the virtual_alloc
        - Real API arround alloc/free memory in WinProcess..

    - Threading
        - code injection do real thread stuff
        - Quid IAT hook stub ? just einit threads and remove this ?

    - Injection
        - code generated by generate_python_exec_shellcode_64[32] may be reused
            Just need to passe the address of the python string as argument

    - GetProcesAddress
        - CRASH if API is not found..
        - fail when resolving xxxW function

FIXME:
    - WMI
        - COM initialisation when injected in another process
        - The CoInitialize might be already called
        - Fix that

    - setup.py build seems to raise an error
    - winutils.create_process : use WinProcess._from_handle

    - Push("[ECX]") in simple_x64 as a "H" rex and i think it should not..